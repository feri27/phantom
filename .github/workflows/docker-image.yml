name: Build and Push Phantom Docker Image

on:
  push:
    branches:
      - main
      - develop
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      force_build:
        description: 'Force rebuild without cache'
        required: false
        default: 'false'
        type: boolean

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Container Registry (GHCR)
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    # ðŸ”‘ Login ke Docker Hub (tambahan)
    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
        labels: |
          org.opencontainers.image.title=Phantom Video Generation
          org.opencontainers.image.description=Docker image for Phantom-Wan-1.3B video generation
          org.opencontainers.image.vendor=feri27
          
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        no-cache: ${{ github.event.inputs.force_build == 'true' }}
        build-args: |
          BUILDKIT_INLINE_CACHE=1
          
    # ðŸ”¥ Push juga ke Docker Hub (tambahan)
    - name: Push to Docker Hub
      if: github.event_name != 'pull_request'
      run: |
        docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest docker.io/${{ secrets.DOCKERHUB_USERNAME }}/phantom:latest
        docker push docker.io/${{ secrets.DOCKERHUB_USERNAME }}/phantom:latest
